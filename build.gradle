buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:gradlePlugin:1.4"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'com.github.spotbugs'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion


task setVersion {
    if (System.env.BUILD_NUMBER) {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + System.env.BUILD_NUMBER
    } else {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + projectVersionBuild
    }
}


jar {
    baseName = projectName
    manifest
            {
                attributes 'Implementation-Title': projectName,
                        'Implementation-Version': version
            }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task createPom {
    doLast {
        pom
        {
            project {
                artifactId 'Z80Processor'
                groupId 'com.codingrodent.microprocessor'
                name 'com.codingrodent.microprocessor.Z80Processor'
                description 'A Z80 Microprocessor core in Java'
                url 'https://github.com/codesqueak/Z80Processor'
                scm {
                    url 'https://github.com/codesqueak/Z80Processor'
                    connection 'scm:git:git://github.com/codesqueak/Z80Processor.git'
                    developerConnection 'scm:git:ssh://github.com:codesqueak/Z80Processor.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'codesqueak'
                        name 'codesqueak'
                        email 'codesqueak@gmail.com'
                        organizationUrl 'http://www.codesqueak.com'
                        //  organization 'codesqueak'
                    }
                }
            }
        }.writeTo("$buildDir/libs/" + projectName + "-" + version + ".pom")
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.7.7.201606060606"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test
        {
            maxParallelForks = 1
            filter
                    {
                        includeTestsMatching "com.codingrodent.microprocessor.*"
                    }
            jacoco {
                append = false
                destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
                classDumpDir = file("$buildDir/jacoco/classpathdumps")
            }
        }

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination = file("${buildDir}/jacocoHtml")
    }
}

spotbugs {
    sourceSets = [sourceSets.main]
    effort = "max"
    reportLevel = "high"
    ignoreFailures = true
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

check.dependsOn jacocoTestReport
test.dependsOn javadoc
jar.dependsOn createPom
jar.dependsOn setVersion



dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.10.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}
