buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+')
    }
}

plugins {
    id "com.github.spotbugs" version "5.0.6"
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'jacoco'
}


apply plugin: 'com.jfrog.artifactory'

// set the java version
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = 'com.codingrodent.microprocessor'

task setVersion {
    if (System.env.BUILD_NUMBER) {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + System.env.BUILD_NUMBER
    } else {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + projectVersionBuild
    }
}


jar {
    baseName = projectName
    manifest
            {
                attributes 'Implementation-Title': projectName,
                        'Implementation-Version': version
            }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    options.addBooleanOption('html5', true)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task createPom {
    doLast {
        pom
        {
            project {
                artifactId 'Z80Processor'
                groupId 'com.codingrodent.microprocessor'
                name 'com.codingrodent.microprocessor.Z80Processor'
                description 'A Z80 Microprocessor core in Java'
                url 'https://github.com/codesqueak/Z80Processor'
                scm {
                    url 'https://github.com/codesqueak/Z80Processor'
                    connection 'scm:git:git://github.com/codesqueak/Z80Processor.git'
                    developerConnection 'scm:git:ssh://github.com:codesqueak/Z80Processor.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'codesqueak'
                        name 'codesqueak'
                        organizationUrl 'http://www.codesqueak.com'
                        //  organization 'codesqueak'
                    }
                }
            }
        }.writeTo("$buildDir/libs/" + projectName + "-" + version + ".pom")
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.7"
}

test {
    useJUnitPlatform()
    maxParallelForks = 1
    filter
            {
                includeTestsMatching "com.codingrodent.microprocessor.*"
            }
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}


spotbugs {
    toolVersion = '4.7.0'
    ignoreFailures = false
    effort = 'max'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'gradle-dev-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}

// check.dependsOn jacocoTestReport

dependencies {
    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.7.0'
    //
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.6.0'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
}


wrapper {
    gradleVersion = '7.4.2'
    distributionType = Wrapper.DistributionType.BIN
}
